apply plugin: 'maven'
apply plugin: 'distribution'

project.group = 'org.grails'
project.version = '3.1.6-UCB1-BUILD-SNAPSHOT'

dependencies {
    provided 'javax.servlet:javax.servlet-api:3.0.1'
//    compile("org.grails:grails-plugin-codecs:$grailsVersion") {
//        exclude group:'org.grails', module:'grails-plugin-converters'
//        exclude group:'org.grails', module:'grails-web'
//    }
    compile('commons-codec:commons-codec:1.5')
    compile("org.grails:grails-plugin-converters:$grailsVersion") {
        exclude group:'org.grails', module:'grails-plugin-datasource'
        exclude group:'org.grails', module:'grails-plugin-controllers'
        exclude group:'org.grails', module:'grails-plugin-domain-class'
        exclude group:'org.grails', module:'grails-web'
    }
//    compile("org.grails:grails-plugin-rest:$grailsVersion") {
//        exclude group:'org.grails', module:'grails-plugin-datasource'
//        exclude group:'org.grails', module:'grails-plugin-controllers'
//        exclude group:'org.grails', module:'grails-web'
//    }
    compile("org.grails:grails-core:$grailsVersion") {
        exclude group:'commons-collections', module:'commons-collections'
        exclude group:'com.googlecode.concurrentlinkedhashmap', module:'concurrentlinkedhashmap-lru'
        exclude group:'xalan', module:'serializer'
        exclude group:'org.springframework', module:'spring-aspects'
        exclude group:'org.springframework', module:'spring-context-support'
        exclude group:'org.springframework', module:'spring-aop'
        exclude group:'org.springframework', module:'spring-tx'
        exclude group:'org.springframework', module:'spring-expression'
        exclude group:'org.grails', module:'grails-spring'
        exclude group:'org.aspectj', module:'aspectjrt'
        exclude group:'org.aspectj', module:'aspectjweaver'
        exclude group:'oro', module:'oro'
        exclude group:'asm', module:'asm'
        exclude group:'aopalliance', module:'aopalliance'
        exclude group:'cglib', module:'cglib'
        exclude group:'commons-validator', module:'commons-validator'
        exclude group:'org.hibernate.javax.persistence', module:'hibernate-jpa-2.0-api'
    }
    compile("org.grails:grails-web:$grailsVersion") {
        exclude group:'org.grails', module:'grails-databinding'
        exclude group:'org.grails', module:'grails-core'
        exclude group:'org.grails', module:'grails-spring'
        exclude group:'com.googlecode.concurrentlinkedhashmap', module:'concurrentlinkedhashmap-lru'
        exclude group:'commons-collections', module:'commons-collections'
        exclude group:'commons-beanutils', module:'commons-beanutils'
        exclude group:'commons-lang', module:'commons-lang'
        exclude group:'commons-fileupload', module:'commons-fileupload'
        exclude group:'xpp3', module:'xpp3_min'
        exclude group:'commons-el', module:'commons-el'
        exclude group:'org.springframework', module:'spring-webmvc'
        exclude group:'opensymphony', module:'sitemesh'
        exclude group:'javax.servlet', module:'jstl'
        exclude group:'taglibs', module:'standard'
        exclude group:'junit', module:'junit'
        exclude group:'commons-io', module:'commons-io'
        exclude group:'org.objenesis', module:'objenesis'
    }

    testCompile("org.springframework:spring-test:$springVersion")
//    compile("org.grails:grails-databinding:$grailsVersion") {
//        exclude group:'junit', module:'junit'
//    }
//    compile project(":grails-datastore-gorm"),
//            project(":grails-datastore-gorm-plugin-support"),
//            project(":grails-datastore-core")

}

distributions {
    main {
        baseName = rootProject.name
        contents {
            from fileTree(dir: '.', includes: [
                    'build/libs/**',
                    'src/**',
                    'gradle/**',
                    'gradelw', 'gradlew.bat',
                    'build.gradle', 'settings.gradle', 'gradle.properties'
            ])
        }
    }
}
distZip.dependsOn jar
distTar.dependsOn jar

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: calnet_deploy_contextUrl + '/' + calnet_deploy_repo) {
                authentication(
                        userName: calnet_deploy_user,
                        password: calnet_deploy_password
                )
            }
        }
    }
}
